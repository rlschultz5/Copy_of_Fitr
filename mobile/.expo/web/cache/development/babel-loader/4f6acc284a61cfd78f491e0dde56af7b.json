{"ast":null,"code":"import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as React from 'react';\nimport HomeScreen from \"../screens/home/homeScreen\";\nimport AuthScreen from \"../screens/auth/authScreen\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport ProfileNavigator from \"./profileNavigator\";\nimport { Ionicons } from '@expo/vector-icons';\nimport CreateWorkout from \"../screens/workout/createWorkout\";\nimport HomeNavigator from \"./homeNavigator\";\nvar Tab = createBottomTabNavigator();\n\nfunction MainNavigator() {\n  return React.createElement(Tab.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'barbell-outline' : 'barbell-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person-outline' : 'person-outline';\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: '#e6006b',\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false\n      };\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: HomeNavigator\n  }), React.createElement(Tab.Screen, {\n    name: \"Profile\",\n    component: ProfileNavigator\n  }));\n}\n\nexport default MainNavigator;","map":{"version":3,"sources":["/Users/adiash/Documents/CS506/fitr-506/mobile/navigators/mainNavigator.js"],"names":["createBottomTabNavigator","React","HomeScreen","AuthScreen","NavigationContainer","ProfileNavigator","Ionicons","CreateWorkout","HomeNavigator","Tab","MainNavigator","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown"],"mappings":"AAAA,SAASA,wBAAT,QAAyC,+BAAzC;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,gBAAP;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,aAAP;AACA,OAAOC,aAAP;AAEA,IAAMC,GAAG,GAAGT,wBAAwB,EAApC;;AAGA,SAASU,aAAT,GAAyB;AACrB,SACQ,oBAAC,GAAD,CAAK,SAAL;AAAe,IAAA,gBAAgB,EAAC,MAAhC;AACA,IAAA,aAAa,EAAE;AAAA,UAAGC,KAAH,QAAGA,KAAH;AAAA,aAAgB;AAC3BC,QAAAA,UAAU,EAAE,2BAA8B;AAAA,cAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,cAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,cAAXC,IAAW,SAAXA,IAAW;AACxC,cAAIC,QAAJ;;AAEA,cAAIL,KAAK,CAACM,IAAN,KAAe,MAAnB,EAA2B;AACzBD,YAAAA,QAAQ,GAAGH,OAAO,GACd,iBADc,GAEd,iBAFJ;AAGD,WAJD,MAIO,IAAIF,KAAK,CAACM,IAAN,KAAe,SAAnB,EAA8B;AACnCD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,gBAAH,GAAsB,gBAAxC;AACD;;AAED,iBAAO,oBAAC,QAAD;AAAU,YAAA,IAAI,EAAEG,QAAhB;AAA0B,YAAA,IAAI,EAAED,IAAhC;AAAsC,YAAA,KAAK,EAAED;AAA7C,YAAP;AACD,SAb0B;AAc3BI,QAAAA,qBAAqB,EAAE,SAdI;AAe3BC,QAAAA,uBAAuB,EAAE,MAfE;AAgB3BC,QAAAA,WAAW,EAAC;AAhBe,OAAhB;AAAA;AADf,KAmBI,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,MAAjB;AAAwB,IAAA,SAAS,EAAEZ;AAAnC,IAnBJ,EAoBI,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,SAAjB;AAA2B,IAAA,SAAS,EAAEH;AAAtC,IApBJ,CADR;AAyBH;;AAED,eAAeK,aAAf","sourcesContent":["import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\nimport * as React from 'react';\nimport HomeScreen from '../screens/home/homeScreen';\nimport AuthScreen from '../screens/auth/authScreen';\nimport { NavigationContainer } from '@react-navigation/native';\nimport ProfileNavigator from './profileNavigator';\nimport { Ionicons } from '@expo/vector-icons';\nimport CreateWorkout from '../screens/workout/createWorkout';\nimport HomeNavigator from './homeNavigator';\n\nconst Tab = createBottomTabNavigator();\n\n\nfunction MainNavigator() {\n    return (\n            <Tab.Navigator initialRouteName=\"Home\" \n            screenOptions={({ route }) => ({\n                tabBarIcon: ({ focused, color, size }) => {\n                  let iconName;\n      \n                  if (route.name === 'Home') {\n                    iconName = focused\n                      ? 'barbell-outline'\n                      : 'barbell-outline';\n                  } else if (route.name === 'Profile') {\n                    iconName = focused ? 'person-outline' : 'person-outline';\n                  }\n      \n                  return <Ionicons name={iconName} size={size} color={color} />;\n                },\n                tabBarActiveTintColor: '#e6006b',\n                tabBarInactiveTintColor: 'gray',\n                headerShown:false              })}\n            >\n                <Tab.Screen name=\"Home\" component={HomeNavigator} />\n                <Tab.Screen name=\"Profile\" component={ProfileNavigator} />\n\n            </Tab.Navigator>\n    );\n}\n\nexport default MainNavigator;"]},"metadata":{},"sourceType":"module"}