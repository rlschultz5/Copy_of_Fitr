{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { Ionicons } from '@expo/vector-icons';\nimport dateFormat, { masks } from \"dateformat\";\nexport default function WorkoutCell(_ref) {\n  var navigation = _ref.navigation,\n      data = _ref.data;\n\n  var renderDate = function renderDate() {\n    if (data.date) {\n      var date = dateFormat(new Date(data.date), \"dddd, mmmm dS, h:MM TT\");\n      return React.createElement(Text, {\n        style: {\n          fontWeight: \"300\",\n          fontSize: 14,\n          marginBottom: 12,\n          color: \"#3d3d3d\"\n        }\n      }, React.createElement(Ionicons, {\n        size: 14,\n        name: \"time-outline\"\n      }), \" \", date);\n    }\n  };\n\n  return React.createElement(View, {\n    style: cellStyle.container\n  }, React.createElement(Pressable, {\n    style: {\n      width: \"100%\"\n    },\n    onPress: function onPress() {\n      navigation.navigate(\"Detail\", {\n        workout: data\n      });\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontWeight: \"600\",\n      fontSize: 16,\n      marginBottom: 5\n    }\n  }, data.title), renderDate(), React.createElement(Text, {\n    style: cellStyle.highlight\n  }, data.activity), React.createElement(Text, null, \"Experience Level: \" + data.experienceLevel), React.createElement(Text, null, \"Status: \" + (data.isFull ? \"Full\" : \"Available\"))));\n}\nvar cellStyle = StyleSheet.create({\n  container: {\n    width: \"85%\",\n    padding: 15,\n    borderColor: \"grey\",\n    borderWidth: 1,\n    borderRadius: 15,\n    backgroundColor: '#fff',\n    alignItems: \"flex-start\",\n    justifyContent: 'center',\n    marginBottom: 15\n  },\n  title: {},\n  highlight: {\n    fontWeight: \"600\",\n    color: \"#e6006b\"\n  }\n});","map":{"version":3,"sources":["/Users/adiash/Documents/CS506/fitr-506/mobile/screens/home/workoutCell.js"],"names":["StatusBar","React","Ionicons","dateFormat","masks","WorkoutCell","navigation","data","renderDate","date","Date","fontWeight","fontSize","marginBottom","color","cellStyle","container","width","navigate","workout","title","highlight","activity","experienceLevel","isFull","StyleSheet","create","padding","borderColor","borderWidth","borderRadius","backgroundColor","alignItems","justifyContent"],"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,UAAP,IAAqBC,KAArB,QAAkC,YAAlC;AAIA,eAAe,SAASC,WAAT,OAA2C;AAAA,MAApBC,UAAoB,QAApBA,UAAoB;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AACxD,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAID,IAAI,CAACE,IAAT,EAAe;AACb,UAAMA,IAAI,GAAGN,UAAU,CAAC,IAAIO,IAAJ,CAASH,IAAI,CAACE,IAAd,CAAD,EAAsB,wBAAtB,CAAvB;AACA,aAAQ,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEE,UAAAA,UAAU,EAAE,KAAd;AAAqBC,UAAAA,QAAQ,EAAE,EAA/B;AAAmCC,UAAAA,YAAY,EAAE,EAAjD;AAAqDC,UAAAA,KAAK,EAAE;AAA5D;AAAb,SAAsF,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE,EAAhB;AAAoB,QAAA,IAAI,EAAC;AAAzB,QAAtF,OAAkIL,IAAlI,CAAR;AAED;AAEF,GAPD;;AASA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,SAAS,CAACC;AAAvB,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAlB;AAAqC,IAAA,OAAO,EAAE,mBAAM;AAAEX,MAAAA,UAAU,CAACY,QAAX,CAAoB,QAApB,EAA8B;AAAEC,QAAAA,OAAO,EAAEZ;AAAX,OAA9B;AAAkD;AAAxG,KAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEI,MAAAA,UAAU,EAAE,KAAd;AAAqBC,MAAAA,QAAQ,EAAE,EAA/B;AAAmCC,MAAAA,YAAY,EAAE;AAAjD;AAAb,KAAoEN,IAAI,CAACa,KAAzE,CAFF,EAGGZ,UAAU,EAHb,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,SAAS,CAACM;AAAvB,KAAmCd,IAAI,CAACe,QAAxC,CAJF,EAKE,oBAAC,IAAD,+BAA4Bf,IAAI,CAACgB,eAAjC,CALF,EAME,oBAAC,IAAD,sBAAmBhB,IAAI,CAACiB,MAAN,GAAc,MAAd,GAAqB,WAAvC,EANF,CADF,CADF;AAaD;AAED,IAAMT,SAAS,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAClCV,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE,KADE;AAETU,IAAAA,OAAO,EAAE,EAFA;AAGTC,IAAAA,WAAW,EAAE,MAHJ;AAITC,IAAAA,WAAW,EAAE,CAJJ;AAKTC,IAAAA,YAAY,EAAE,EALL;AAMTC,IAAAA,eAAe,EAAE,MANR;AAOTC,IAAAA,UAAU,EAAE,YAPH;AAQTC,IAAAA,cAAc,EAAE,QARP;AASTpB,IAAAA,YAAY,EAAE;AATL,GADuB;AAYlCO,EAAAA,KAAK,EAAE,EAZ2B;AAgBlCC,EAAAA,SAAS,EAAE;AACTV,IAAAA,UAAU,EAAE,KADH;AAETG,IAAAA,KAAK,EAAE;AAFE;AAhBuB,CAAlB,CAAlB","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View, Pressable } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport dateFormat, { masks } from \"dateformat\";\n\n\n\nexport default function WorkoutCell({ navigation, data }) {\n  const renderDate = () => {\n    if (data.date) {\n      const date = dateFormat(new Date(data.date), \"dddd, mmmm dS, h:MM TT\");\n      return (<Text style={{ fontWeight: \"300\", fontSize: 14, marginBottom: 12, color: \"#3d3d3d\" }}><Ionicons size={14} name=\"time-outline\" /> {date}</Text>\n      )\n    }\n\n  }\n\n  return (\n    <View style={cellStyle.container}>\n      <Pressable style={{ width: \"100%\" }} onPress={() => { navigation.navigate(\"Detail\", { workout: data }) }}>\n\n        <Text style={{ fontWeight: \"600\", fontSize: 16, marginBottom: 5 }}>{data.title}</Text>\n        {renderDate()}\n        <Text style={cellStyle.highlight}>{data.activity}</Text>\n        <Text>{`Experience Level: ${data.experienceLevel}`}</Text>\n        <Text>{`Status: ${(data.isFull)?\"Full\":\"Available\"}`}</Text>\n      </Pressable>\n\n    </View>\n  );\n}\n\nconst cellStyle = StyleSheet.create({\n  container: {\n    width: \"85%\",\n    padding: 15,\n    borderColor: \"grey\",\n    borderWidth: 1,\n    borderRadius: 15,\n    backgroundColor: '#fff',\n    alignItems: \"flex-start\",\n    justifyContent: 'center',\n    marginBottom: 15,\n  },\n  title: {\n\n  }\n  ,\n  highlight: {\n    fontWeight: \"600\",\n    color: \"#e6006b\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}