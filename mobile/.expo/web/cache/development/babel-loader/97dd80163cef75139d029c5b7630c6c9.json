{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Picker as RNPicker } from \"@react-native-picker/picker\";\nimport { styles } from \"../helpers/stylesHelper\";\n\nvar IOSPicker = function IOSPicker(_ref) {\n  var selectedItem = _ref.selectedItem,\n      disabled = _ref.disabled,\n      show = _ref.show,\n      title = _ref.title,\n      renderInput = _ref.renderInput,\n      renderDoneBar = _ref.renderDoneBar,\n      renderPickerItems = _ref.renderPickerItems,\n      onItemChange = _ref.onItemChange,\n      togglePicker = _ref.togglePicker,\n      containerStyle = _ref.containerStyle,\n      animationValue = _ref.animationValue,\n      customProps = _ref.customProps;\n  return React.createElement(View, {\n    style: containerStyle\n  }, renderInput(), React.createElement(Modal, {\n    visible: show && !disabled,\n    transparent: true,\n    animationType: \"slide\",\n    supportedOrientations: [\"portrait\", \"landscape\"]\n  }, React.createElement(TouchableOpacity, {\n    style: styles.blurTouchable,\n    onPress: togglePicker\n  }, React.createElement(Animated.View, {\n    style: [styles.animatedInput, {\n      opacity: animationValue\n    }]\n  })), renderDoneBar(), React.createElement(RNPicker, _extends({\n    style: styles.iosPickerContainer,\n    prompt: title,\n    onValueChange: onItemChange,\n    selectedValue: selectedItem.value\n  }, customProps), renderPickerItems())));\n};\n\nexport default IOSPicker;","map":{"version":3,"sources":["/Users/adiash/Documents/CS506/fitr-506/mobile/node_modules/react-native-woodpicker/dist/components/IOSPicker.js"],"names":["React","Picker","RNPicker","styles","IOSPicker","selectedItem","disabled","show","title","renderInput","renderDoneBar","renderPickerItems","onItemChange","togglePicker","containerStyle","animationValue","customProps","createElement","View","style","Modal","visible","transparent","animationType","supportedOrientations","TouchableOpacity","blurTouchable","onPress","Animated","animatedInput","opacity","iosPickerContainer","prompt","onValueChange","selectedValue","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,MAAM,IAAIC,QAAnB,QAAmC,6BAAnC;AACA,SAASC,MAAT;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAsK;AAAA,MAAnKC,YAAmK,QAAnKA,YAAmK;AAAA,MAArJC,QAAqJ,QAArJA,QAAqJ;AAAA,MAA3IC,IAA2I,QAA3IA,IAA2I;AAAA,MAArIC,KAAqI,QAArIA,KAAqI;AAAA,MAA9HC,WAA8H,QAA9HA,WAA8H;AAAA,MAAjHC,aAAiH,QAAjHA,aAAiH;AAAA,MAAlGC,iBAAkG,QAAlGA,iBAAkG;AAAA,MAA/EC,YAA+E,QAA/EA,YAA+E;AAAA,MAAjEC,YAAiE,QAAjEA,YAAiE;AAAA,MAAnDC,cAAmD,QAAnDA,cAAmD;AAAA,MAAnCC,cAAmC,QAAnCA,cAAmC;AAAA,MAAnBC,WAAmB,QAAnBA,WAAmB;AACpL,SAAQhB,KAAK,CAACiB,aAAN,CAAoBC,IAApB,EAA0B;AAAEC,IAAAA,KAAK,EAAEL;AAAT,GAA1B,EACJL,WAAW,EADP,EAEJT,KAAK,CAACiB,aAAN,CAAoBG,KAApB,EAA2B;AAAEC,IAAAA,OAAO,EAAEd,IAAI,IAAI,CAACD,QAApB;AAA8BgB,IAAAA,WAAW,EAAE,IAA3C;AAAiDC,IAAAA,aAAa,EAAE,OAAhE;AAAyEC,IAAAA,qBAAqB,EAAE,CAAC,UAAD,EAAa,WAAb;AAAhG,GAA3B,EACIxB,KAAK,CAACiB,aAAN,CAAoBQ,gBAApB,EAAsC;AAAEN,IAAAA,KAAK,EAAEhB,MAAM,CAACuB,aAAhB;AAA+BC,IAAAA,OAAO,EAAEd;AAAxC,GAAtC,EACIb,KAAK,CAACiB,aAAN,CAAoBW,QAAQ,CAACV,IAA7B,EAAmC;AAAEC,IAAAA,KAAK,EAAE,CACpChB,MAAM,CAAC0B,aAD6B,EAEpC;AACIC,MAAAA,OAAO,EAAEf;AADb,KAFoC;AAAT,GAAnC,CADJ,CADJ,EAQIL,aAAa,EARjB,EASIV,KAAK,CAACiB,aAAN,CAAoBf,QAApB,EAA8B,SAAc;AAAEiB,IAAAA,KAAK,EAAEhB,MAAM,CAAC4B,kBAAhB;AAAoCC,IAAAA,MAAM,EAAExB,KAA5C;AAExCyB,IAAAA,aAAa,EAAErB,YAFyB;AAEXsB,IAAAA,aAAa,EAAE7B,YAAY,CAAC8B;AAFjB,GAAd,EAEwCnB,WAFxC,CAA9B,EAEoFL,iBAAiB,EAFrG,CATJ,CAFI,CAAR;AAcH,CAfD;;AAgBA,eAAeP,SAAf","sourcesContent":["import React from \"react\";\nimport { View, Modal, Animated, TouchableOpacity, } from \"react-native\";\nimport { Picker as RNPicker } from \"@react-native-picker/picker\";\nimport { styles } from \"../helpers/stylesHelper\";\nconst IOSPicker = ({ selectedItem, disabled, show, title, renderInput, renderDoneBar, renderPickerItems, onItemChange, togglePicker, containerStyle, animationValue, customProps, }) => {\n    return (React.createElement(View, { style: containerStyle },\n        renderInput(),\n        React.createElement(Modal, { visible: show && !disabled, transparent: true, animationType: \"slide\", supportedOrientations: [\"portrait\", \"landscape\"] },\n            React.createElement(TouchableOpacity, { style: styles.blurTouchable, onPress: togglePicker },\n                React.createElement(Animated.View, { style: [\n                        styles.animatedInput,\n                        {\n                            opacity: animationValue,\n                        },\n                    ] })),\n            renderDoneBar(),\n            React.createElement(RNPicker, Object.assign({ style: styles.iosPickerContainer, prompt: title, \n                // @ts-ignore\n                onValueChange: onItemChange, selectedValue: selectedItem.value }, customProps), renderPickerItems()))));\n};\nexport default IOSPicker;\n"]},"metadata":{},"sourceType":"module"}