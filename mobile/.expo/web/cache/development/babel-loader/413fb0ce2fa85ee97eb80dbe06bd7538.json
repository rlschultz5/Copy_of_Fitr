{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\n\nvar authScreen = function authScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  var _useState7 = useState(\"NA\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      authStatus = _useState8[0],\n      setAuthStatus = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isError = _useState10[0],\n      setError = _useState10[1];\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: styles.container\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss\n  }, React.createElement(View, {\n    style: styles.inner\n  }, React.createElement(Text, {\n    style: styles.header\n  }, \"Fitr\"), React.createElement(View, null, React.createElement(TextInput, {\n    placeholderTextColor: \"#ffc3b8\",\n    style: styles.textInput,\n    onChangeText: setUsername,\n    value: username,\n    placeholder: \"Username\",\n    style: styles.textInput\n  }), React.createElement(TextInput, {\n    placeholderTextColor: \"#ffc3b8\",\n    secureTextEntry: true,\n    onChangeText: setPassword,\n    value: password,\n    placeholder: \"Password\",\n    style: styles.textInput\n  })), isError ? React.createElement(Text, {\n    style: {\n      color: \"blue\"\n    }\n  }, \"* Login Failed. The credentials do not match.\") : React.createElement(Text, null), React.createElement(View, {\n    style: styles.btnContainer\n  }, React.createElement(Button, {\n    color: \"white\",\n    title: \"Submit\",\n    disabled: isLoading,\n    onPress: function onPress() {\n      return navigation.navigate('Home');\n    }\n  }), React.createElement(Button, {\n    color: \"white\",\n    title: \"Forgot your password?\",\n    onPress: function onPress() {\n      return navigation.navigate('Forgot Password');\n    }\n  }), React.createElement(Button, {\n    color: \"white\",\n    title: \"Don't have an account?\",\n    onPress: function onPress() {\n      return navigation.navigate('Signup');\n    }\n  }), React.createElement(Button, {\n    color: \"white\",\n    title: \"Create Workout temp nav\",\n    onPress: function onPress() {\n      return navigation.navigate('Create Workout');\n    }\n  })))));\n};\n\nexport default authScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#344955\"\n  },\n  inner: {\n    padding: 24,\n    flex: 1,\n    justifyContent: \"space-around\"\n  },\n  header: {\n    fontSize: 36,\n    fontWeight: \"300\",\n    marginBottom: 48,\n    color: \"white\"\n  },\n  textInput: {\n    height: 40,\n    color: \"white\",\n    borderColor: \"white\",\n    borderBottomWidth: 1,\n    marginBottom: 50\n  },\n  btnContainer: {\n    marginTop: 12\n  }\n});","map":{"version":3,"sources":["/Users/adiash/Documents/CS506/fitr-506/mobile/screens/auth/authScreen.js"],"names":["StatusBar","React","useState","authScreen","navigation","username","setUsername","password","setPassword","isLoading","setIsLoading","authStatus","setAuthStatus","isError","setError","Platform","OS","styles","container","Keyboard","dismiss","inner","header","textInput","color","btnContainer","navigate","StyleSheet","create","flex","backgroundColor","padding","justifyContent","fontSize","fontWeight","marginBottom","height","borderColor","borderBottomWidth","marginTop"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;;;;AAQA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACrC,kBAAgCF,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOG,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgCJ,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOK,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAkCN,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOO,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAoCR,QAAQ,CAAC,IAAD,CAA5C;AAAA;AAAA,MAAOS,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAA4BV,QAAQ,CAAC,KAAD,CAApC;AAAA;AAAA,MAAOW,OAAP;AAAA,MAAgBC,QAAhB;;AAqCA,SACE,oBAAC,oBAAD;AACE,IAAA,QAAQ,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAoC,QADhD;AAEE,IAAA,KAAK,EAAEC,MAAM,CAACC;AAFhB,KAIE,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEC,QAAQ,CAACC;AAA5C,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK;AAApB,YADF,EAEE,oBAAC,IAAD,QACE,oBAAC,SAAD;AAAW,IAAA,oBAAoB,EAAC,SAAhC;AAA0C,IAAA,KAAK,EAAGL,MAAM,CAACM,SAAzD;AAAmE,IAAA,YAAY,EAAEjB,WAAjF;AAA8F,IAAA,KAAK,EAAED,QAArG;AAA+G,IAAA,WAAW,EAAC,UAA3H;AAAsI,IAAA,KAAK,EAAEY,MAAM,CAACM;AAApJ,IADF,EAEE,oBAAC,SAAD;AAAW,IAAA,oBAAoB,EAAC,SAAhC;AAA0C,IAAA,eAAe,EAAE,IAA3D;AAAiE,IAAA,YAAY,EAAEf,WAA/E;AAA4F,IAAA,KAAK,EAAED,QAAnG;AAA6G,IAAA,WAAW,EAAC,UAAzH;AAAoI,IAAA,KAAK,EAAEU,MAAM,CAACM;AAAlJ,IAFF,CAFF,EAMIV,OAAD,GAAW,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACW,MAAAA,KAAK,EAAC;AAAP;AAAb,qDAAX,GAA8F,oBAAC,IAAD,OANjG,EAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACQ;AAApB,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,KAAK,EAAC,QAA5B;AAAqC,IAAA,QAAQ,EAAEhB,SAA/C;AAA0D,IAAA,OAAO,EAAE;AAAA,aAAML,UAAU,CAACsB,QAAX,CAAoB,MAApB,CAAN;AAAA;AAAnE,IADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,KAAK,EAAC,uBAA5B;AAAoD,IAAA,OAAO,EAAE;AAAA,aAAMtB,UAAU,CAACsB,QAAX,CAAoB,iBAApB,CAAN;AAAA;AAA7D,IAFF,EAGE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,KAAK,EAAC,wBAA5B;AAAqD,IAAA,OAAO,EAAE;AAAA,aAAMtB,UAAU,CAACsB,QAAX,CAAoB,QAApB,CAAN;AAAA;AAA9D,IAHF,EAIE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,KAAK,EAAC,yBAA5B;AAAsD,IAAA,OAAO,EAAE;AAAA,aAAMtB,UAAU,CAACsB,QAAX,CAAoB,gBAApB,CAAN;AAAA;AAA/D,IAJF,CAPF,CADF,CAJF,CADF;AAuBD,CAjED;;AAqEA,eAAevB,UAAf;AAEA,IAAMc,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,SAAS,EAAE;AACTW,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR,GADoB;AAK/BT,EAAAA,KAAK,EAAE;AACLU,IAAAA,OAAO,EAAE,EADJ;AAELF,IAAAA,IAAI,EAAE,CAFD;AAGLG,IAAAA,cAAc,EAAE;AAHX,GALwB;AAU/BV,EAAAA,MAAM,EAAE;AACNW,IAAAA,QAAQ,EAAE,EADJ;AAENC,IAAAA,UAAU,EAAE,KAFN;AAGNC,IAAAA,YAAY,EAAE,EAHR;AAINX,IAAAA,KAAK,EAAC;AAJA,GAVuB;AAgB/BD,EAAAA,SAAS,EAAE;AACTa,IAAAA,MAAM,EAAE,EADC;AAETZ,IAAAA,KAAK,EAAE,OAFE;AAGTa,IAAAA,WAAW,EAAE,OAHJ;AAITC,IAAAA,iBAAiB,EAAE,CAJV;AAKTH,IAAAA,YAAY,EAAE;AALL,GAhBoB;AAuB/BV,EAAAA,YAAY,EAAE;AACZc,IAAAA,SAAS,EAAE;AADC;AAvBiB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\n// import axios from \"axios\";\nimport { View, KeyboardAvoidingView, TextInput, StyleSheet, Text, Platform, TouchableWithoutFeedback, Button, Keyboard } from 'react-native';\n// import AsyncStorage from '@react-native-async-storage/async-storage';\n// import API from \"../../api\";\n\n\n\nconst authScreen = ({ navigation }) => {\n  const [username, setUsername] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [authStatus, setAuthStatus] = useState(\"NA\");\n  const [isError, setError] = useState(false);\n\n\n  // const onSubmit = async () => {\n  //   setIsLoading(true);\n  //   try {\n      \n  //     const res = await axios.post(`http://${API}:8080/api/signin`, { username: username, password: password });\n  //     setIsLoading(false);\n\n  //     if (res.status != 200) {\n  //       setAuthStatus(\"denied\");\n  //       setError(true);\n  //       console.log(\"denied\");\n  //       return;\n  //     }\n\n  //     try {\n  //       await AsyncStorage.setItem('user', JSON.stringify(res.data))\n  //     } catch (e) {\n  //       // saving error\n  //     }\n\n  //     navigation.navigate(\"MainNavigator\", { screen: \"Home\" });\n\n  //   } catch (e) {\n  //     console.log(e.message);\n  //     setError(true);\n  //     setIsLoading(false);\n  //     setAuthStatus(\"denied\");\n  //     return;\n  //   }\n  // }\n\n  // Change Submit button to {onSubmit}\n  // <Button color=\"white\" title=\"Submit\" disabled={isLoading} onPress={onSubmit} />\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n      style={styles.container}\n    >\n      <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n        <View style={styles.inner}>\n          <Text style={styles.header}>Fitr</Text>\n          <View>\n            <TextInput placeholderTextColor=\"#ffc3b8\" style ={styles.textInput}onChangeText={setUsername} value={username} placeholder=\"Username\" style={styles.textInput} />\n            <TextInput placeholderTextColor=\"#ffc3b8\" secureTextEntry={true} onChangeText={setPassword} value={password} placeholder=\"Password\" style={styles.textInput} />\n          </View>\n          {(isError)?(<Text style={{color:\"blue\"}}>* Login Failed. The credentials do not match.</Text>):<Text/>}\n          <View style={styles.btnContainer}>\n            <Button color=\"white\" title=\"Submit\" disabled={isLoading} onPress={() => navigation.navigate('Home')} />\n            <Button color=\"white\" title=\"Forgot your password?\" onPress={() => navigation.navigate('Forgot Password')} />\n            <Button color=\"white\" title=\"Don't have an account?\" onPress={() => navigation.navigate('Signup')} />\n            <Button color=\"white\" title=\"Create Workout temp nav\" onPress={() => navigation.navigate('Create Workout')} />\n          </View>\n        </View>\n      </TouchableWithoutFeedback>\n    </KeyboardAvoidingView>\n  );\n}\n\n\n\nexport default authScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#344955\"\n  },\n  inner: {\n    padding: 24,\n    flex: 1,\n    justifyContent: \"space-around\"\n  },\n  header: {\n    fontSize: 36,\n    fontWeight: \"300\",\n    marginBottom: 48,\n    color:\"white\",\n  },\n  textInput: {\n    height: 40,\n    color: \"white\",\n    borderColor: \"white\",\n    borderBottomWidth: 1,\n    marginBottom: 50\n  },\n  btnContainer: {\n    marginTop: 12\n  }\n});\n\n"]},"metadata":{},"sourceType":"module"}