{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { Picker } from 'react-native-woodpicker';\nimport { DatePicker } from 'react-native-woodpicker';\nimport CheckBox from 'react-native-check-box';\nexport default function Filter(_ref) {\n  var visible = _ref.visible,\n      setVisible = _ref.setVisible,\n      filter = _ref.filter,\n      setFilter = _ref.setFilter;\n\n  var _useState = useState(filter.activity),\n      _useState2 = _slicedToArray(_useState, 2),\n      pickedSports = _useState2[0],\n      setSports = _useState2[1];\n\n  var _useState3 = useState(filter.experienceLevel),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pickedEL = _useState4[0],\n      setEL = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pickedGender = _useState6[0],\n      setGender = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isChecked = _useState8[0],\n      setIsChecked = _useState8[1];\n\n  var closeModule = function closeModule() {\n    setFilter({\n      activity: pickedSports,\n      experienceLevel: pickedEL\n    });\n    console.log(filter);\n    setVisible(false);\n  };\n\n  var SPORTS = [{\n    label: \"All\",\n    value: -1\n  }, {\n    label: \"Basketball\",\n    value: 2\n  }, {\n    label: \"Volleyball\",\n    value: 3\n  }];\n  var EXPERIENCE_LEVEL = [{\n    label: \"All\",\n    value: -1\n  }, {\n    label: \"Casual\",\n    value: 1\n  }, {\n    label: \"Competitive\",\n    value: 2\n  }];\n  var GENDERS = [{\n    label: \"No\",\n    value: 1\n  }, {\n    label: \"Female\",\n    value: 2\n  }, {\n    label: \"Male\",\n    value: 3\n  }, {\n    label: \"Non-Binary\",\n    value: 4\n  }, {\n    label: \"Other\",\n    value: 5\n  }];\n  return React.createElement(Modal, {\n    transparent: true,\n    visible: visible,\n    animationType: \"fade\"\n  }, React.createElement(View, {\n    style: filterStyle.bgModal\n  }), React.createElement(Modal, {\n    visible: visible,\n    transparent: true,\n    style: filterStyle.mainModal,\n    animationType: \"slide\"\n  }, React.createElement(View, {\n    style: filterStyle.container\n  }, React.createElement(Pressable, {\n    style: filterStyle.closeButton,\n    onPress: function onPress() {\n      return closeModule();\n    }\n  }, React.createElement(Ionicons, {\n    name: \"ios-close-outline\",\n    size: 32,\n    color: \"gray\"\n  })), React.createElement(View, {\n    style: filterStyle.textContainer\n  }, React.createElement(Text, {\n    style: filterStyle.title\n  }, \"Filters\"), React.createElement(Text, null, \"Set filters for your workouts!\")), React.createElement(ScrollView, null, React.createElement(View, {\n    style: filterStyle.grid\n  }, React.createElement(Text, {\n    style: {\n      flex: 1\n    }\n  }, \"Sports\"), React.createElement(Picker, {\n    containerStyle: filterStyle.picker,\n    item: pickedSports,\n    items: SPORTS,\n    onItemChange: setSports,\n    title: \"Pick your sports\",\n    placeholder: \"All\",\n    style: {\n      flex: 1,\n      textAlign: \"right\"\n    },\n    isNullable: true\n  })), React.createElement(View, {\n    style: filterStyle.grid\n  }, React.createElement(Text, {\n    style: {\n      flex: 1\n    }\n  }, \"Experience Level\"), React.createElement(Picker, {\n    containerStyle: filterStyle.picker,\n    item: pickedEL,\n    items: EXPERIENCE_LEVEL,\n    onItemChange: setEL,\n    title: \"Pick your experience level\",\n    placeholder: \"Any\",\n    style: {\n      flex: 1,\n      textAlign: \"right\"\n    },\n    isNullable: true\n  })), React.createElement(View, {\n    style: filterStyle.grid\n  }, React.createElement(Text, {\n    style: {\n      flex: 1\n    }\n  }, \"Gender Specific?\"), React.createElement(Picker, {\n    containerStyle: filterStyle.picker,\n    item: pickedGender,\n    items: EXPERIENCE_LEVEL,\n    onItemChange: setGender,\n    title: \"Choose your gender filter\",\n    placeholder: \"No\",\n    style: {\n      flex: 1,\n      textAlign: \"right\"\n    },\n    isNullable: true\n  })), React.createElement(View, {\n    style: filterStyle.grid\n  }, React.createElement(Text, {\n    style: {\n      flex: 1\n    }\n  }, \"Capacity\"), React.createElement(Text, {\n    keyboardType: \"numeric\",\n    style: {\n      flex: 1,\n      textAlign: \"right\"\n    }\n  }, \"N/A\")), React.createElement(CheckBox, {\n    style: {\n      flex: 1,\n      padding: \"10%\"\n    },\n    onClick: function onClick() {\n      setIsChecked(!isChecked);\n    },\n    isChecked: isChecked,\n    leftText: \"CheckBox\"\n  })))));\n}\nvar filterStyle = StyleSheet.create({\n  picker: {\n    borderColor: \"grey\",\n    borderWidth: 1,\n    height: 25,\n    paddingRight: 10,\n    paddingLeft: 10,\n    borderRadius: 10\n  },\n  grid: {\n    padding: \"10%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  mainModal: {\n    marginTop: \"30%\"\n  },\n  bgModal: {\n    flex: 1,\n    backgroundColor: \"black\",\n    opacity: 0.2\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: \"600\"\n  },\n  textContainer: {\n    padding: 30\n  },\n  container: {\n    top: \"20%\",\n    flex: 1,\n    backgroundColor: \"white\",\n    borderRadius: 20\n  },\n  closeButton: {\n    left: 20,\n    top: 15\n  }\n});","map":{"version":3,"sources":["/Users/adiash/Documents/CS506/fitr-506/mobile/screens/home/filter.js"],"names":["StatusBar","React","useState","Ionicons","Picker","DatePicker","CheckBox","Filter","visible","setVisible","filter","setFilter","activity","pickedSports","setSports","experienceLevel","pickedEL","setEL","pickedGender","setGender","isChecked","setIsChecked","closeModule","console","log","SPORTS","label","value","EXPERIENCE_LEVEL","GENDERS","filterStyle","bgModal","mainModal","container","closeButton","textContainer","title","grid","flex","picker","textAlign","padding","StyleSheet","create","borderColor","borderWidth","height","paddingRight","paddingLeft","borderRadius","flexDirection","justifyContent","marginTop","backgroundColor","opacity","fontSize","fontWeight","top","left"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View, Modal, Pressable, TextInput, ScrollView} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { Picker } from 'react-native-woodpicker'\nimport { DatePicker } from 'react-native-woodpicker'\n\nimport CheckBox from 'react-native-check-box'\n\n\n\nexport default function Filter({ visible, setVisible, filter, setFilter }) {\n    const [pickedSports, setSports] = useState(filter.activity);\n    const [pickedEL, setEL] = useState(filter.experienceLevel);\n    const [pickedGender, setGender] = useState();\n    const [isChecked, setIsChecked] = useState(false);\n\n\n    const closeModule = () => {\n        setFilter({activity: pickedSports, experienceLevel: pickedEL})\n        console.log(filter);\n        setVisible(false)\n    }\n\n\n    const SPORTS = [\n        { label: \"All\", value: -1 },\n        { label: \"Basketball\", value: 2 },\n        { label: \"Volleyball\", value: 3 },]\n\n    const EXPERIENCE_LEVEL = [\n        { label: \"All\", value: -1 },\n        { label: \"Casual\", value: 1 },\n        { label: \"Competitive\", value: 2 },\n    ]\n\n    const GENDERS = [\n        { label: \"No\", value: 1 },\n        { label: \"Female\", value: 2 },\n        { label: \"Male\", value: 3 },\n        { label: \"Non-Binary\", value: 4 },\n        { label: \"Other\", value: 5 }\n\n    ]\n\n    return (\n        <Modal transparent visible={visible} animationType=\"fade\">\n            <View style={filterStyle.bgModal} >\n            </View>\n            <Modal visible={visible} transparent={true} style={filterStyle.mainModal} animationType=\"slide\" >\n\n\n                <View style={filterStyle.container}>\n                    <Pressable style={filterStyle.closeButton} onPress={() => closeModule()}>\n                        <Ionicons name='ios-close-outline' size={32} color=\"gray\" />\n                    </Pressable>\n                    <View style={filterStyle.textContainer}>\n                        <Text style={filterStyle.title}>Filters</Text>\n                        <Text>Set filters for your workouts!</Text>\n                    </View>\n                    <ScrollView>\n                    <View style={filterStyle.grid}>\n                        <Text style={{ flex: 1 }}>Sports</Text>\n                        <Picker\n                            containerStyle={filterStyle.picker}\n                            item={pickedSports}\n                            items={SPORTS}\n                            onItemChange={setSports}\n                            title=\"Pick your sports\"\n                            placeholder=\"All\"\n                            style={{ flex: 1, textAlign: \"right\" }}\n                            isNullable\n                        />\n                    </View>\n                    <View style={filterStyle.grid}>\n                        <Text style={{ flex: 1 }}>Experience Level</Text>\n                        <Picker\n                            containerStyle={filterStyle.picker}\n                            item={pickedEL}\n                            items={EXPERIENCE_LEVEL}\n                            onItemChange={setEL}\n                            title=\"Pick your experience level\"\n                            placeholder=\"Any\"\n                            style={{ flex: 1, textAlign: \"right\" }}\n                            isNullable\n                        />\n                    </View>\n                    <View style={filterStyle.grid}>\n                        <Text style={{ flex: 1 }}>Gender Specific?</Text>\n                        <Picker\n                            containerStyle={filterStyle.picker}\n                            item={pickedGender}\n                            items={EXPERIENCE_LEVEL}\n                            onItemChange={setGender}\n                            title=\"Choose your gender filter\"\n                            placeholder=\"No\"\n                            style={{ flex: 1, textAlign: \"right\" }}\n                            isNullable\n                        />\n                    </View>\n                    <View style={filterStyle.grid}>\n                        <Text style={{ flex: 1 }}>Capacity</Text>\n                        <Text keyboardType=\"numeric\" style={{ flex: 1, textAlign: \"right\" }}>N/A</Text>\n                    </View>\n                    \n                    <CheckBox\n    style={{flex: 1, padding: \"10%\"}}\n    onClick={()=>{\n      setIsChecked(!isChecked)\n    }}\n    isChecked={isChecked}\n    leftText={\"CheckBox\"}\n/>\n</ScrollView>\n\n\n\n                </View>\n\n            </Modal>\n        </Modal>\n    );\n}\n\nconst filterStyle = StyleSheet.create({\n    picker: {\n        borderColor: \"grey\",\n        borderWidth: 1,\n        height: 25,\n        paddingRight: 10,\n        paddingLeft: 10,\n        borderRadius: 10,\n    },\n    grid: {\n        padding: \"10%\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n    },\n    mainModal: {\n        marginTop: \"30%\"\n    },\n    bgModal: {\n        flex: 1,\n        backgroundColor: \"black\",\n        opacity: 0.2,\n    },\n    title: {\n        fontSize: 30,\n        fontWeight: \"600\",\n    },\n    textContainer: {\n        padding: 30,\n    },\n    container: {\n        top: \"20%\",\n        flex: 1,\n        backgroundColor: \"white\",\n        borderRadius: 20\n\n    },\n    closeButton: {\n        left: 20,\n        top: 15\n    }\n\n});\n"]},"metadata":{},"sourceType":"module"}