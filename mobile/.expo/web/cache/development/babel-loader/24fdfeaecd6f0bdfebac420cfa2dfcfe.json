{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { AuthContext } from \"../../contexts/authContext\";\n\nvar CreateWorkout = function CreateWorkout(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      activity = _useState2[0],\n      setActivity = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      experience = _useState4[0],\n      setExperience = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      length = _useState6[0],\n      setLength = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dateAndTime = _useState8[0],\n      setDateAndTime = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      location = _useState10[0],\n      setLocation = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      minPeople = _useState12[0],\n      setMinPeople = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      maxPeople = _useState14[0],\n      setMaxPeople = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      disabled = _useState16[0],\n      setDisabled = _useState16[1];\n\n  var _useState17 = useState(\"NA\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      authStatus = _useState18[0],\n      setAuthStatus = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      isError = _useState20[0],\n      setError = _useState20[1];\n\n  var setLoggedIn = React.useContext(AuthContext);\n\n  var onSubmit = function onSubmit() {\n    var res;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(activity == null || experience == null || length == null || dateAndTime == null || location == null || minPeople == null || maxPeople == null)) {\n              _context.next = 3;\n              break;\n            }\n\n            setError(true);\n            return _context.abrupt(\"return\");\n\n          case 3:\n            setDisabled(true);\n            _context.prev = 4;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(axios.post(\"http://\" + API + \":8080/api/createWorkout\", {\n              activity: activity,\n              experience: experience,\n              length: length,\n              dateAndTime: dateAndTime,\n              location: location,\n              minPeople: minPeople,\n              maxPeople: maxPeople\n            }));\n\n          case 7:\n            res = _context.sent;\n            setIsLoading(false);\n\n            if (!(res.status != 200)) {\n              _context.next = 14;\n              break;\n            }\n\n            setAuthStatus(\"denied\");\n            setError(true);\n            console.log(\"denied\");\n            return _context.abrupt(\"return\");\n\n          case 14:\n            _context.prev = 14;\n            _context.next = 17;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('user', JSON.stringify(res.data)));\n\n          case 17:\n            console.log(res.data);\n            _context.next = 22;\n            break;\n\n          case 20:\n            _context.prev = 20;\n            _context.t0 = _context[\"catch\"](14);\n\n          case 22:\n            navigation.navigate(\"AuthNavigator\", {\n              screen: \"Login\"\n            });\n            _context.next = 32;\n            break;\n\n          case 25:\n            _context.prev = 25;\n            _context.t1 = _context[\"catch\"](4);\n            console.log(_context.t1.message);\n            setError(true);\n            setIsLoading(false);\n            setAuthStatus(\"denied\");\n            return _context.abrupt(\"return\");\n\n          case 32:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[4, 25], [14, 20]], Promise);\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: styles.container\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss\n  }, React.createElement(ScrollView, {\n    style: {\n      marginTop: 40\n    }\n  }, React.createElement(View, {\n    style: styles.inner\n  }, React.createElement(Text, {\n    style: styles.header\n  }, \"Fitr\"), React.createElement(View, null, React.createElement(Text, null), React.createElement(TextInput, {\n    placeholderTextColor: \"grey\",\n    secureTextEntry: true,\n    onChangeText: setActivity,\n    value: activity,\n    placeholder: \"Activity (TODO: dropdown list)\",\n    style: styles.textInput\n  }), React.createElement(TextInput, {\n    placeholderTextColor: \"grey\",\n    secureTextEntry: true,\n    onChangeText: setExperience,\n    value: experience,\n    placeholder: \"Experience (TODO: dropdown list)\",\n    style: styles.textInput\n  }), React.createElement(TextInput, {\n    placeholderTextColor: \"grey\",\n    secureTextEntry: true,\n    onChangeText: setLength,\n    value: length,\n    placeholder: \"Length (TODO: dropdown list)\",\n    style: styles.textInput\n  }), React.createElement(TextInput, {\n    placeholderTextColor: \"grey\",\n    secureTextEntry: true,\n    onChangeText: setDateAndTime,\n    value: dateAndTime,\n    placeholder: \"Date and Time (TODO: clock implementation)\",\n    style: styles.textInput\n  }), React.createElement(TextInput, {\n    placeholderTextColor: \"grey\",\n    secureTextEntry: true,\n    onChangeText: setLocation,\n    value: location,\n    placeholder: \"Location (TODO: Decide on input)\",\n    style: styles.textInput\n  }), React.createElement(TextInput, {\n    placeholderTextColor: \"grey\",\n    secureTextEntry: true,\n    onChangeText: setMinPeople,\n    value: minPeople,\n    placeholder: \"Minimum People\",\n    style: styles.textInput\n  }), React.createElement(TextInput, {\n    placeholderTextColor: \"grey\",\n    secureTextEntry: true,\n    onChangeText: setMaxPeople,\n    value: maxPeople,\n    placeholder: \"Maximum People\",\n    style: styles.textInput\n  }), React.createElement(Text, null), React.createElement(Button, {\n    color: \"black\",\n    disabled: disabled,\n    title: \"Create Workout!\",\n    onPress: onSubmit\n  })), isError ? React.createElement(Text, {\n    style: {\n      color: \"blue\"\n    }\n  }, \"* Unsuccessful. Make sure all fields are filled out and try again.\") : React.createElement(Text, null)))));\n};\n\nexport default CreateWorkout;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  inner: {\n    padding: 24,\n    flex: 1,\n    justifyContent: \"space-around\"\n  },\n  header: {\n    fontSize: 36,\n    fontWeight: \"300\",\n    color: \"black\"\n  },\n  textInput: {\n    height: 40,\n    color: \"black\",\n    borderColor: \"grey\",\n    borderBottomWidth: 1,\n    marginBottom: 50\n  },\n  btnContainer: {\n    marginTop: 12\n  }\n});","map":{"version":3,"sources":["/Users/adiash/Documents/CS506/fitr-506/mobile/screens/workout/createWorkout.js"],"names":["React","useState","AuthContext","CreateWorkout","navigation","activity","setActivity","experience","setExperience","length","setLength","dateAndTime","setDateAndTime","location","setLocation","minPeople","setMinPeople","maxPeople","setMaxPeople","disabled","setDisabled","authStatus","setAuthStatus","isError","setError","setLoggedIn","useContext","onSubmit","axios","post","API","res","setIsLoading","status","console","log","AsyncStorage","setItem","JSON","stringify","data","navigate","screen","message","Platform","OS","styles","container","Keyboard","dismiss","marginTop","inner","header","textInput","color","StyleSheet","create","flex","backgroundColor","padding","justifyContent","fontSize","fontWeight","height","borderColor","borderBottomWidth","marginBottom","btnContainer"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n// import axios from \"axios\";\nimport { View, KeyboardAvoidingView, TextInput, StyleSheet, Text, Platform, ScrollView, TouchableWithoutFeedback, Button, Keyboard } from 'react-native';\n// import AsyncStorage from '@react-native-async-storage/async-storage';\n// import API from \"../../api\";\nimport { AuthContext } from '../../contexts/authContext';\nconst CreateWorkout = ({ navigation }) => {\n  const [activity, setActivity] = useState(null);\n  const [experience, setExperience] = useState(null);\n  const [length, setLength] = useState(null);\n  const [dateAndTime, setDateAndTime] = useState(null);\n  const [location, setLocation] = useState(null);\n  const [minPeople, setMinPeople] = useState(null);\n  const [maxPeople, setMaxPeople] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n  const [authStatus, setAuthStatus] = useState(\"NA\");\n  const [isError, setError] = useState(false);\n\n  const setLoggedIn = React.useContext(AuthContext);\n\n  const onSubmit = async () => {\n\n    if(activity == null|| experience == null || length == null || dateAndTime == null || location == null || minPeople == null || maxPeople == null ) {\n      setError(true);\n      return;\n    }\n\n    setDisabled(true);\n    try {\n        const res = await axios.post(`http://${API}:8080/api/createWorkout`,\n        {\n          activity: activity,\n          experience: experience,\n          length: length,\n          dateAndTime: dateAndTime,\n          location: location,\n          minPeople: minPeople,\n          maxPeople: maxPeople\n        });\n      setIsLoading(false);\n\n      if (res.status != 200) {\n        setAuthStatus(\"denied\");\n        setError(true);\n        console.log(\"denied\");\n        return;\n      }\n\n      try {\n        await AsyncStorage.setItem('user', JSON.stringify(res.data))\n        console.log(res.data);\n      } catch (e) {\n        // saving error\n        // TODO: CORRECT??\n      }\n\n      navigation.navigate(\"AuthNavigator\", { screen: \"Login\" });\n\n    } catch (e) {\n      console.log(e.message);\n      setError(true);\n      setIsLoading(false);\n      setAuthStatus(\"denied\");\n      return;\n    }\n  }\n\n  // Change Create Workout! button to {createWorkout}\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n      style={styles.container}\n    >\n      <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n        <ScrollView style={{ marginTop: 40 }}>\n          <View style={styles.inner}>\n            <Text style={styles.header}>Fitr</Text>\n            <View>\n              <Text></Text>\n              <TextInput placeholderTextColor=\"grey\" secureTextEntry={true} onChangeText={setActivity} value={activity} placeholder=\"Activity (TODO: dropdown list)\" style={styles.textInput} />\n              <TextInput placeholderTextColor=\"grey\" secureTextEntry={true} onChangeText={setExperience} value={experience} placeholder=\"Experience (TODO: dropdown list)\" style={styles.textInput} />\n              <TextInput placeholderTextColor=\"grey\" secureTextEntry={true} onChangeText={setLength} value={length} placeholder=\"Length (TODO: dropdown list)\" style={styles.textInput} />\n              <TextInput placeholderTextColor=\"grey\" secureTextEntry={true} onChangeText={setDateAndTime} value={dateAndTime} placeholder=\"Date and Time (TODO: clock implementation)\" style={styles.textInput} />\n              <TextInput placeholderTextColor=\"grey\" secureTextEntry={true} onChangeText={setLocation} value={location} placeholder=\"Location (TODO: Decide on input)\" style={styles.textInput} />\n              <TextInput placeholderTextColor=\"grey\" secureTextEntry={true} onChangeText={setMinPeople} value={minPeople} placeholder=\"Minimum People\" style={styles.textInput} />\n              <TextInput placeholderTextColor=\"grey\" secureTextEntry={true} onChangeText={setMaxPeople} value={maxPeople} placeholder=\"Maximum People\" style={styles.textInput} />\n              <Text></Text>\n              <Button color=\"black\" disabled={disabled} title=\"Create Workout!\" onPress={onSubmit} />\n            </View>\n            {(isError)?(<Text style={{color:\"blue\"}}>* Unsuccessful. Make sure all fields are filled out and try again.</Text>):<Text/>}\n\n          </View>\n        </ScrollView>\n      </TouchableWithoutFeedback>\n    </KeyboardAvoidingView>\n  );\n}\n\nexport default CreateWorkout;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  inner: {\n    padding: 24,\n    flex: 1,\n    justifyContent: \"space-around\"\n  },\n  header: {\n    fontSize: 36,\n    fontWeight: \"300\",\n    color:\"black\",\n  },\n  textInput: {\n    height: 40,\n    color: \"black\",\n    borderColor: \"grey\",\n    borderBottomWidth: 1,\n    marginBottom: 50\n  },\n  btnContainer: {\n    marginTop: 12\n  }\n});\n\n"]},"metadata":{},"sourceType":"module"}